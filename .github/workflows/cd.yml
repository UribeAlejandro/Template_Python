# name: Continuous Delivery

# on:
#   workflow_run:
#     workflows: [Continuous Integration]
#     types: [completed]
#     branches:
#       - main


# env:
#   IMAGE_NAME: image-name
#   GCP_ZONE: us-east1
#   PROJECT_ID: ${{ secrets.PROJECT_ID }}
#   MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }}
#   MLFLOW_EXPERIMENT_NAME: ${{ secrets.MLFLOW_EXPERIMENT_NAME }}

# permissions:
#   pages: write
#   contents: write
#   id-token: write

# jobs:
#   staging:
#     name: Build & Push Docker Image to GCP
#     runs-on: ubuntu-latest
#     if: ${{ github.event.workflow_run.conclusion == 'success' && github.ref == 'refs/heads/main'}}

#     steps:
#       - name: Checkout repository code
#         uses: actions/checkout@v4

#       - name: Authenticate to GCP
#         uses: google-github-actions/auth@v2
#         with:
#           credentials_json: ${{ secrets.SERVICE_ACCOUNT_KEY }}

#       - name: Set up Cloud SDK
#         uses: google-github-actions/setup-gcloud@v2

#       - name: Build Docker Image
#         run: docker build -t $IMAGE_NAME:latest .

#       - name: Automatic Tagging of Releases
#         id: increment-git-tag
#         run: |
#           bash ./.github/scripts/git_update.sh -v major

#       - name: Configure Docker Client
#         run: |
#           gcloud auth configure-docker --quiet
#           gcloud auth configure-docker $GCP_ZONE-docker.pkg.dev --quiet

#       - name: Push Docker Image to Artifact Registry
#         env:
#           GIT_TAG: ${{ steps.increment-git-tag.outputs.git-tag }}
#         run: |-
#           docker tag $IMAGE_NAME:latest $GCP_ZONE-docker.pkg.dev/$PROJECT_ID/images/$IMAGE_NAME:latest
#           docker tag $IMAGE_NAME:latest $GCP_ZONE-docker.pkg.dev/$PROJECT_ID/images/$IMAGE_NAME:$GIT_TAG
#           docker push $GCP_ZONE-docker.pkg.dev/$PROJECT_ID/images/$IMAGE_NAME:latest
#           docker push $GCP_ZONE-docker.pkg.dev/$PROJECT_ID/images/$IMAGE_NAME:$GIT_TAG

#   deploy:
#     name: Deploy Docker Image to GCP - Cloud Run
#     runs-on: ubuntu-latest
#     needs: staging
#     if: ${{ github.event.workflow_run.conclusion == 'success' && github.ref == 'refs/heads/main'}}

#     steps:
#       - name: Checkout repository code
#         uses: actions/checkout@v4

#       - name: Authenticate to GCP
#         uses: google-github-actions/auth@v2
#         with:
#           credentials_json: ${{ secrets.SERVICE_ACCOUNT_KEY }}

#       - name: Set up Cloud SDK
#         uses: google-github-actions/setup-gcloud@v2

#       - name: Deploy Docker Image to Cloud Run
#         uses: 'google-github-actions/deploy-cloudrun@v2'
#         with:
#           service: 'service-name'
#           region: ${{ env.GCP_ZONE }}
#           image: gcr.io/${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }}:latest
#           env_vars: |
#             MLFLOW_TRACKING_URI=${{ env.MLFLOW_TRACKING_URI }}
#             MLFLOW_EXPERIMENT_NAME=${{ env.MLFLOW_EXPERIMENT_NAME }}
